/*
* Skeleton V1.2
* Copyright 2011, Dave Gamache
* www.getskeleton.com
* Free to use under the MIT license.
* http://www.opensource.org/licenses/mit-license.php
* 6/20/2012
*/


/* Table of Contents
==================================================
    #Base 960 Grid
    #Tablet (Portrait)
    #Mobile (Portrait)
    #Mobile (Landscape)
    #Clearing */

/* #Base 960 Grid
================================================== */
    $div: 20px;
    $one: 80px;

    .container                                  { position: relative; width: $one * 16; margin: 0 auto; padding: 0; }
    .container .column,
    .container .columns                         { float: left; display: inline; margin-left: 10px; margin-right: 10px; }
    .row                                        { margin-bottom: $div; }

    /* Nested Column Classes */
    .column.alpha, .columns.alpha               { margin-left: 0; }
    .column.omega, .columns.omega               { margin-right: 0; }

    /* Base Grid */
    .container .one.column,
    .container .one.columns                     { width: $one - $div;  }
    .container .two.columns                     { width: ($one * 2) - $div; }
    .container .three.columns                   { width: ($one * 3) - $div; }
    .container .four.columns                    { width: ($one * 4) - $div; }
    .container .five.columns                    { width: ($one * 5) - $div; }
    .container .six.columns                     { width: ($one * 6) - $div; }
    .container .seven.columns                   { width: ($one * 7) - $div; }
    .container .eight.columns                   { width: ($one * 8) - $div; }
    .container .nine.columns                    { width: ($one * 9) - $div; }
    .container .ten.columns                     { width: ($one * 10) - $div; }
    .container .eleven.columns                  { width: ($one * 11) - $div; }
    .container .twelve.columns                  { width: ($one * 12) - $div; }
    .container .thirteen.columns                { width: ($one * 13) - $div; }
    .container .fourteen.columns                { width: ($one * 14) - $div; }
    .container .fifteen.columns                 { width: ($one * 15) - $div; }
    .container .sixteen.columns                 { width: ($one * 16) - $div; }

    .container .one-third.column                { width: $one * 5; }
    .container .two-thirds.column               { width: ($one * 10) + $div; }

    /* Offsets */
    .container .offset-by-one                   { padding-left: $one x 1;  }
    .container .offset-by-two                   { padding-left: $one x 2; }
    .container .offset-by-three                 { padding-left: $one x 3; }
    .container .offset-by-four                  { padding-left: $one x 4; }
    .container .offset-by-five                  { padding-left: $one x 5; }
    .container .offset-by-six                   { padding-left: $one x 6; }
    .container .offset-by-seven                 { padding-left: $one x 7; }
    .container .offset-by-eight                 { padding-left: $one x 8; }
    .container .offset-by-nine                  { padding-left: $one x 9; }
    .container .offset-by-ten                   { padding-left: $one x 10; }
    .container .offset-by-eleven                { padding-left: $one x 11; }
    .container .offset-by-twelve                { padding-left: $one x 12; }
    .container .offset-by-thirteen              { padding-left: $one x 13; }
    .container .offset-by-fourteen              { padding-left: $one x 14; }
    .container .offset-by-fifteen               { padding-left: $one x 15; }



/* #Tablet (Portrait)
================================================== */
    $t_one: 48px;
    /* Note: Design for a width of 768px */

    @media only screen and (min-width: 768px) and (max-width: 1300px) {
        .container                                  { width: $t_one * 16; }
        .container .column,
        .container .columns                         { margin-left: 10px; margin-right: 10px;  }
        .column.alpha, .columns.alpha               { margin-left: 0; margin-right: 10px; }
        .column.omega, .columns.omega               { margin-right: 0; margin-left: 10px; }
        .alpha.omega                                { margin-left: 0; margin-right: 0; }

        .container .one.column,
        .container .one.columns                     { width: $t_one - $div; }
        .container .two.columns                     { width: ($t_one * 2) - $div }
        .container .three.columns                   { width: ($t_one * 3) - $div; }
        .container .four.columns                    { width: ($t_one * 4) - $div; }
        .container .five.columns                    { width: ($t_one * 5) - $div; }
        .container .six.columns                     { width: ($t_one * 6) - $div; }
        .container .seven.columns                   { width: ($t_one * 7) - $div; }
        .container .eight.columns                   { width: ($t_one * 8) - $div; }
        .container .nine.columns                    { width: ($t_one * 9) - $div; }
        .container .ten.columns                     { width: ($t_one * 10) - $div; }
        .container .eleven.columns                  { width: ($t_one * 11) - $div; }
        .container .twelve.columns                  { width: ($t_one * 12) - $div; }
        .container .thirteen.columns                { width: ($t_one * 13) - $div; }
        .container .fourteen.columns                { width: ($t_one * 14) - $div; }
        .container .fifteen.columns                 { width: ($t_one * 15) - $div; }
        .container .sixteen.columns                 { width: ($t_one * 16) - $div; }

        .container .one-third.column                { width: ($t_one * 16 / 3)  - $div; }
        .container .two-thirds.column               { width: ($t_one * 16 / 3) * 2 - $div; }

        /* Offsets */
        .container .offset-by-one                   { padding-left: $one x 1; }
        .container .offset-by-two                   { padding-left: $one x 2; }
        .container .offset-by-three                 { padding-left: $one x 3; }
        .container .offset-by-four                  { padding-left: $one x 4; }
        .container .offset-by-five                  { padding-left: $one x 5; }
        .container .offset-by-six                   { padding-left: $one x 6; }
        .container .offset-by-seven                 { padding-left: $one x 7; }
        .container .offset-by-eight                 { padding-left: $one x 8; }
        .container .offset-by-nine                  { padding-left: $one x 9; }
        .container .offset-by-ten                   { padding-left: $one x 10; }
        .container .offset-by-eleven                { padding-left: $one x 11; }
        .container .offset-by-twelve                { padding-left: $one x 12; }
        .container .offset-by-thirteen              { padding-left: $one x 13; }
        .container .offset-by-fourteen              { padding-left: $one x 14; }
        .container .offset-by-fifteen               { padding-left: $one x 15; }
    }


/*  #Mobile (Portrait)
================================================== */

    /* Note: Design for a width of 320px */

    // @media only screen and (max-width: 767px) {
    //     .container { width: $one * 5; }
    //     .container .columns,
    //     .container .column { margin: 0; }

    //     .container .one.column,
    //     .container .one.columns,
    //     .container .two.columns,
    //     .container .three.columns,
    //     .container .four.columns,
    //     .container .five.columns,
    //     .container .six.columns,
    //     .container .seven.columns,
    //     .container .eight.columns,
    //     .container .nine.columns,
    //     .container .ten.columns,
    //     .container .eleven.columns,
    //     .container .twelve.columns,
    //     .container .thirteen.columns,
    //     .container .fourteen.columns,
    //     .container .fifteen.columns,
    //     .container .sixteen.columns,
    //     .container .one-third.column,
    //     .container .two-thirds.column  { width: 300px; }

    //     /* Offsets */
    //     .container .offset-by-one,
    //     .container .offset-by-two,
    //     .container .offset-by-three,
    //     .container .offset-by-four,
    //     .container .offset-by-five,
    //     .container .offset-by-six,
    //     .container .offset-by-seven,
    //     .container .offset-by-eight,
    //     .container .offset-by-nine,
    //     .container .offset-by-ten,
    //     .container .offset-by-eleven,
    //     .container .offset-by-twelve,
    //     .container .offset-by-thirteen,
    //     .container .offset-by-fourteen,
    //     .container .offset-by-fifteen { padding-left: 0; }

    // }


/* #Mobile (Landscape)
================================================== */

    /* Note: Design for a width of 480px */

    @media only screen and (max-width: 767px) {
        .container { width: 420px; }
        .container .columns,
        .container .column { margin: 0; }

        .container .one.column,
        .container .one.columns,
        .container .two.columns,
        .container .three.columns,
        .container .four.columns,
        .container .five.columns,
        .container .six.columns,
        .container .seven.columns,
        .container .eight.columns,
        .container .nine.columns,
        .container .ten.columns,
        .container .eleven.columns,
        .container .twelve.columns,
        .container .thirteen.columns,
        .container .fourteen.columns,
        .container .fifteen.columns,
        .container .sixteen.columns,
        .container .one-third.column,
        .container .two-thirds.column { width: 420px !important; }
    }


/* #Clearing
================================================== */

    /* Self Clearing Goodness */
    .container:after { content: "\0020"; display: block; height: 0; clear: both; visibility: hidden; }

    /* Use clearfix class on parent to clear nested columns,
    or wrap each row of columns in a <div class="row"> */
    .clearfix:before,
    .clearfix:after,
    .row:before,
    .row:after {
      content: '\0020';
      display: block;
      overflow: hidden;
      visibility: hidden;
      width: 0;
      height: 0; }
    .row:after,
    .clearfix:after {
      clear: both; }
    .row,
    .clearfix {
      zoom: 1; }

    /* You can also use a <br class="clear" /> to clear columns */
    .clear {
      clear: both;
      display: block;
      overflow: hidden;
      visibility: hidden;
      width: 0;
      height: 0;
    }
